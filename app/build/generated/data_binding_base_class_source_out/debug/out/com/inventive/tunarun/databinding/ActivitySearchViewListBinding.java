// Generated by view binder compiler. Do not edit!
package com.inventive.tunarun.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.inventive.tunarun.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySearchViewListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonDismiss;

  @NonNull
  public final LinearLayout linearLayout0;

  @NonNull
  public final ListView listItemView;

  @NonNull
  public final SearchView searchItem;

  @NonNull
  public final TextView textTitle;

  private ActivitySearchViewListBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonDismiss, @NonNull LinearLayout linearLayout0,
      @NonNull ListView listItemView, @NonNull SearchView searchItem, @NonNull TextView textTitle) {
    this.rootView = rootView;
    this.buttonDismiss = buttonDismiss;
    this.linearLayout0 = linearLayout0;
    this.listItemView = listItemView;
    this.searchItem = searchItem;
    this.textTitle = textTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchViewListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchViewListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search_view_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchViewListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_dismiss;
      Button buttonDismiss = ViewBindings.findChildViewById(rootView, id);
      if (buttonDismiss == null) {
        break missingId;
      }

      id = R.id.linearLayout0;
      LinearLayout linearLayout0 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout0 == null) {
        break missingId;
      }

      id = R.id.list_item_view;
      ListView listItemView = ViewBindings.findChildViewById(rootView, id);
      if (listItemView == null) {
        break missingId;
      }

      id = R.id.search_item;
      SearchView searchItem = ViewBindings.findChildViewById(rootView, id);
      if (searchItem == null) {
        break missingId;
      }

      id = R.id.text_title;
      TextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      return new ActivitySearchViewListBinding((ConstraintLayout) rootView, buttonDismiss,
          linearLayout0, listItemView, searchItem, textTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
