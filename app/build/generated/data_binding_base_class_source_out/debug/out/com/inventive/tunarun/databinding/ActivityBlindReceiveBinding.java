// Generated by view binder compiler. Do not edit!
package com.inventive.tunarun.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.inventive.tunarun.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBlindReceiveBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView actionSave;

  @NonNull
  public final TextView actionUse;

  @NonNull
  public final TextView captBarcode;

  @NonNull
  public final TextView captLot;

  @NonNull
  public final TextView captMaterial;

  @NonNull
  public final TextView gotoListAll;

  @NonNull
  public final EditText inputBarcode;

  @NonNull
  public final EditText textBatchNo;

  @NonNull
  public final EditText textLotNo;

  @NonNull
  public final EditText textMaterial;

  @NonNull
  public final EditText textOrigin;

  @NonNull
  public final EditText textRemarkDesc;

  @NonNull
  public final TextView textResult;

  @NonNull
  public final EditText textSloc;

  @NonNull
  public final EditText textSpecies;

  @NonNull
  public final EditText textStatus;

  @NonNull
  public final TextView textView10;

  @NonNull
  public final TextView textView12;

  @NonNull
  public final TextView textView13;

  @NonNull
  public final TextView textView14;

  @NonNull
  public final TextView textView15;

  @NonNull
  public final TextView textView16;

  @NonNull
  public final TextView textView6;

  @NonNull
  public final TextView textView8;

  @NonNull
  public final TextView textView9;

  @NonNull
  public final EditText textWeight;

  @NonNull
  public final TextView viewShift;

  private ActivityBlindReceiveBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView actionSave, @NonNull TextView actionUse, @NonNull TextView captBarcode,
      @NonNull TextView captLot, @NonNull TextView captMaterial, @NonNull TextView gotoListAll,
      @NonNull EditText inputBarcode, @NonNull EditText textBatchNo, @NonNull EditText textLotNo,
      @NonNull EditText textMaterial, @NonNull EditText textOrigin,
      @NonNull EditText textRemarkDesc, @NonNull TextView textResult, @NonNull EditText textSloc,
      @NonNull EditText textSpecies, @NonNull EditText textStatus, @NonNull TextView textView10,
      @NonNull TextView textView12, @NonNull TextView textView13, @NonNull TextView textView14,
      @NonNull TextView textView15, @NonNull TextView textView16, @NonNull TextView textView6,
      @NonNull TextView textView8, @NonNull TextView textView9, @NonNull EditText textWeight,
      @NonNull TextView viewShift) {
    this.rootView = rootView;
    this.actionSave = actionSave;
    this.actionUse = actionUse;
    this.captBarcode = captBarcode;
    this.captLot = captLot;
    this.captMaterial = captMaterial;
    this.gotoListAll = gotoListAll;
    this.inputBarcode = inputBarcode;
    this.textBatchNo = textBatchNo;
    this.textLotNo = textLotNo;
    this.textMaterial = textMaterial;
    this.textOrigin = textOrigin;
    this.textRemarkDesc = textRemarkDesc;
    this.textResult = textResult;
    this.textSloc = textSloc;
    this.textSpecies = textSpecies;
    this.textStatus = textStatus;
    this.textView10 = textView10;
    this.textView12 = textView12;
    this.textView13 = textView13;
    this.textView14 = textView14;
    this.textView15 = textView15;
    this.textView16 = textView16;
    this.textView6 = textView6;
    this.textView8 = textView8;
    this.textView9 = textView9;
    this.textWeight = textWeight;
    this.viewShift = viewShift;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBlindReceiveBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBlindReceiveBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_blind_receive, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBlindReceiveBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.action_save;
      TextView actionSave = ViewBindings.findChildViewById(rootView, id);
      if (actionSave == null) {
        break missingId;
      }

      id = R.id.action_use;
      TextView actionUse = ViewBindings.findChildViewById(rootView, id);
      if (actionUse == null) {
        break missingId;
      }

      id = R.id.capt_barcode;
      TextView captBarcode = ViewBindings.findChildViewById(rootView, id);
      if (captBarcode == null) {
        break missingId;
      }

      id = R.id.capt_lot;
      TextView captLot = ViewBindings.findChildViewById(rootView, id);
      if (captLot == null) {
        break missingId;
      }

      id = R.id.capt_material;
      TextView captMaterial = ViewBindings.findChildViewById(rootView, id);
      if (captMaterial == null) {
        break missingId;
      }

      id = R.id.goto_listAll;
      TextView gotoListAll = ViewBindings.findChildViewById(rootView, id);
      if (gotoListAll == null) {
        break missingId;
      }

      id = R.id.input_barcode;
      EditText inputBarcode = ViewBindings.findChildViewById(rootView, id);
      if (inputBarcode == null) {
        break missingId;
      }

      id = R.id.text_batchNo;
      EditText textBatchNo = ViewBindings.findChildViewById(rootView, id);
      if (textBatchNo == null) {
        break missingId;
      }

      id = R.id.text_lotNo;
      EditText textLotNo = ViewBindings.findChildViewById(rootView, id);
      if (textLotNo == null) {
        break missingId;
      }

      id = R.id.text_material;
      EditText textMaterial = ViewBindings.findChildViewById(rootView, id);
      if (textMaterial == null) {
        break missingId;
      }

      id = R.id.text_origin;
      EditText textOrigin = ViewBindings.findChildViewById(rootView, id);
      if (textOrigin == null) {
        break missingId;
      }

      id = R.id.text_remarkDesc;
      EditText textRemarkDesc = ViewBindings.findChildViewById(rootView, id);
      if (textRemarkDesc == null) {
        break missingId;
      }

      id = R.id.text_result;
      TextView textResult = ViewBindings.findChildViewById(rootView, id);
      if (textResult == null) {
        break missingId;
      }

      id = R.id.text_sloc;
      EditText textSloc = ViewBindings.findChildViewById(rootView, id);
      if (textSloc == null) {
        break missingId;
      }

      id = R.id.text_species;
      EditText textSpecies = ViewBindings.findChildViewById(rootView, id);
      if (textSpecies == null) {
        break missingId;
      }

      id = R.id.text_status;
      EditText textStatus = ViewBindings.findChildViewById(rootView, id);
      if (textStatus == null) {
        break missingId;
      }

      id = R.id.textView10;
      TextView textView10 = ViewBindings.findChildViewById(rootView, id);
      if (textView10 == null) {
        break missingId;
      }

      id = R.id.textView12;
      TextView textView12 = ViewBindings.findChildViewById(rootView, id);
      if (textView12 == null) {
        break missingId;
      }

      id = R.id.textView13;
      TextView textView13 = ViewBindings.findChildViewById(rootView, id);
      if (textView13 == null) {
        break missingId;
      }

      id = R.id.textView14;
      TextView textView14 = ViewBindings.findChildViewById(rootView, id);
      if (textView14 == null) {
        break missingId;
      }

      id = R.id.textView15;
      TextView textView15 = ViewBindings.findChildViewById(rootView, id);
      if (textView15 == null) {
        break missingId;
      }

      id = R.id.textView16;
      TextView textView16 = ViewBindings.findChildViewById(rootView, id);
      if (textView16 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      id = R.id.textView8;
      TextView textView8 = ViewBindings.findChildViewById(rootView, id);
      if (textView8 == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      id = R.id.text_weight;
      EditText textWeight = ViewBindings.findChildViewById(rootView, id);
      if (textWeight == null) {
        break missingId;
      }

      id = R.id.view_shift;
      TextView viewShift = ViewBindings.findChildViewById(rootView, id);
      if (viewShift == null) {
        break missingId;
      }

      return new ActivityBlindReceiveBinding((ConstraintLayout) rootView, actionSave, actionUse,
          captBarcode, captLot, captMaterial, gotoListAll, inputBarcode, textBatchNo, textLotNo,
          textMaterial, textOrigin, textRemarkDesc, textResult, textSloc, textSpecies, textStatus,
          textView10, textView12, textView13, textView14, textView15, textView16, textView6,
          textView8, textView9, textWeight, viewShift);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
