// Generated by view binder compiler. Do not edit!
package com.inventive.tunarun.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.inventive.tunarun.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySkipjackShiftBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView textDatePicker;

  @NonNull
  public final TextView textDs;

  @NonNull
  public final TextView textNs;

  @NonNull
  public final TextView textView25;

  @NonNull
  public final TextView textView26;

  @NonNull
  public final TextView textView6;

  private ActivitySkipjackShiftBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout main, @NonNull TextView textDatePicker, @NonNull TextView textDs,
      @NonNull TextView textNs, @NonNull TextView textView25, @NonNull TextView textView26,
      @NonNull TextView textView6) {
    this.rootView = rootView;
    this.main = main;
    this.textDatePicker = textDatePicker;
    this.textDs = textDs;
    this.textNs = textNs;
    this.textView25 = textView25;
    this.textView26 = textView26;
    this.textView6 = textView6;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySkipjackShiftBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySkipjackShiftBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_skipjack_shift, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySkipjackShiftBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.text_date_picker;
      TextView textDatePicker = ViewBindings.findChildViewById(rootView, id);
      if (textDatePicker == null) {
        break missingId;
      }

      id = R.id.text_ds;
      TextView textDs = ViewBindings.findChildViewById(rootView, id);
      if (textDs == null) {
        break missingId;
      }

      id = R.id.text_ns;
      TextView textNs = ViewBindings.findChildViewById(rootView, id);
      if (textNs == null) {
        break missingId;
      }

      id = R.id.textView25;
      TextView textView25 = ViewBindings.findChildViewById(rootView, id);
      if (textView25 == null) {
        break missingId;
      }

      id = R.id.textView26;
      TextView textView26 = ViewBindings.findChildViewById(rootView, id);
      if (textView26 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      return new ActivitySkipjackShiftBinding((ConstraintLayout) rootView, main, textDatePicker,
          textDs, textNs, textView25, textView26, textView6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
