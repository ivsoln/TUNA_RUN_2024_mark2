// Generated by view binder compiler. Do not edit!
package com.inventive.tunarun.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.inventive.tunarun.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSkipjackQuePropertyBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView capVc1;

  @NonNull
  public final TextView capVc2;

  @NonNull
  public final TextView capVc3;

  @NonNull
  public final TextView textDesc;

  @NonNull
  public final TextView textType;

  @NonNull
  public final TextView viewColor1;

  @NonNull
  public final TextView viewColor2;

  @NonNull
  public final TextView viewColor3;

  private FragmentSkipjackQuePropertyBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView capVc1, @NonNull TextView capVc2, @NonNull TextView capVc3,
      @NonNull TextView textDesc, @NonNull TextView textType, @NonNull TextView viewColor1,
      @NonNull TextView viewColor2, @NonNull TextView viewColor3) {
    this.rootView = rootView;
    this.capVc1 = capVc1;
    this.capVc2 = capVc2;
    this.capVc3 = capVc3;
    this.textDesc = textDesc;
    this.textType = textType;
    this.viewColor1 = viewColor1;
    this.viewColor2 = viewColor2;
    this.viewColor3 = viewColor3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSkipjackQuePropertyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSkipjackQuePropertyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_skipjack_que_property, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSkipjackQuePropertyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cap_vc1;
      TextView capVc1 = ViewBindings.findChildViewById(rootView, id);
      if (capVc1 == null) {
        break missingId;
      }

      id = R.id.cap_vc2;
      TextView capVc2 = ViewBindings.findChildViewById(rootView, id);
      if (capVc2 == null) {
        break missingId;
      }

      id = R.id.cap_vc3;
      TextView capVc3 = ViewBindings.findChildViewById(rootView, id);
      if (capVc3 == null) {
        break missingId;
      }

      id = R.id.text_desc;
      TextView textDesc = ViewBindings.findChildViewById(rootView, id);
      if (textDesc == null) {
        break missingId;
      }

      id = R.id.text_type;
      TextView textType = ViewBindings.findChildViewById(rootView, id);
      if (textType == null) {
        break missingId;
      }

      id = R.id.view_color1;
      TextView viewColor1 = ViewBindings.findChildViewById(rootView, id);
      if (viewColor1 == null) {
        break missingId;
      }

      id = R.id.view_color2;
      TextView viewColor2 = ViewBindings.findChildViewById(rootView, id);
      if (viewColor2 == null) {
        break missingId;
      }

      id = R.id.view_color3;
      TextView viewColor3 = ViewBindings.findChildViewById(rootView, id);
      if (viewColor3 == null) {
        break missingId;
      }

      return new FragmentSkipjackQuePropertyBinding((ConstraintLayout) rootView, capVc1, capVc2,
          capVc3, textDesc, textType, viewColor1, viewColor2, viewColor3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
