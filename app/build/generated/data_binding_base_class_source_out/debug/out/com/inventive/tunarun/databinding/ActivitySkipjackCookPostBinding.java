// Generated by view binder compiler. Do not edit!
package com.inventive.tunarun.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.inventive.tunarun.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySkipjackCookPostBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView captScanned;

  @NonNull
  public final TextView gotoPickRackCount;

  @NonNull
  public final TextView gotoReset;

  @NonNull
  public final TextView gotoScan;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView22;

  @NonNull
  public final TextView textView23;

  @NonNull
  public final TextView viewScanned;

  @NonNull
  public final TextView viewShift;

  @NonNull
  public final TextView viewSteamNo;

  private ActivitySkipjackCookPostBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView captScanned, @NonNull TextView gotoPickRackCount,
      @NonNull TextView gotoReset, @NonNull TextView gotoScan, @NonNull ConstraintLayout main,
      @NonNull RecyclerView recyclerView, @NonNull TextView textView, @NonNull TextView textView22,
      @NonNull TextView textView23, @NonNull TextView viewScanned, @NonNull TextView viewShift,
      @NonNull TextView viewSteamNo) {
    this.rootView = rootView;
    this.captScanned = captScanned;
    this.gotoPickRackCount = gotoPickRackCount;
    this.gotoReset = gotoReset;
    this.gotoScan = gotoScan;
    this.main = main;
    this.recyclerView = recyclerView;
    this.textView = textView;
    this.textView22 = textView22;
    this.textView23 = textView23;
    this.viewScanned = viewScanned;
    this.viewShift = viewShift;
    this.viewSteamNo = viewSteamNo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySkipjackCookPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySkipjackCookPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_skipjack_cook_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySkipjackCookPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.capt_scanned;
      TextView captScanned = ViewBindings.findChildViewById(rootView, id);
      if (captScanned == null) {
        break missingId;
      }

      id = R.id.goto_pickRackCount;
      TextView gotoPickRackCount = ViewBindings.findChildViewById(rootView, id);
      if (gotoPickRackCount == null) {
        break missingId;
      }

      id = R.id.goto_reset;
      TextView gotoReset = ViewBindings.findChildViewById(rootView, id);
      if (gotoReset == null) {
        break missingId;
      }

      id = R.id.goto_scan;
      TextView gotoScan = ViewBindings.findChildViewById(rootView, id);
      if (gotoScan == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView22;
      TextView textView22 = ViewBindings.findChildViewById(rootView, id);
      if (textView22 == null) {
        break missingId;
      }

      id = R.id.textView23;
      TextView textView23 = ViewBindings.findChildViewById(rootView, id);
      if (textView23 == null) {
        break missingId;
      }

      id = R.id.view_scanned;
      TextView viewScanned = ViewBindings.findChildViewById(rootView, id);
      if (viewScanned == null) {
        break missingId;
      }

      id = R.id.view_shift;
      TextView viewShift = ViewBindings.findChildViewById(rootView, id);
      if (viewShift == null) {
        break missingId;
      }

      id = R.id.view_steamNo;
      TextView viewSteamNo = ViewBindings.findChildViewById(rootView, id);
      if (viewSteamNo == null) {
        break missingId;
      }

      return new ActivitySkipjackCookPostBinding((ConstraintLayout) rootView, captScanned,
          gotoPickRackCount, gotoReset, gotoScan, main, recyclerView, textView, textView22,
          textView23, viewScanned, viewShift, viewSteamNo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
