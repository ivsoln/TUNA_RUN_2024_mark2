// Generated by view binder compiler. Do not edit!
package com.inventive.tunarun.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.inventive.tunarun.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomSkipjackQueItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView captLot;

  @NonNull
  public final TextView captQue;

  @NonNull
  public final TextView viewBatchNo;

  @NonNull
  public final TextView viewItemNo;

  @NonNull
  public final TextView viewLotNo;

  @NonNull
  public final TextView viewQue;

  @NonNull
  public final TextView viewSeparate;

  @NonNull
  public final TextView viewWeight;

  private CustomSkipjackQueItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView captLot, @NonNull TextView captQue, @NonNull TextView viewBatchNo,
      @NonNull TextView viewItemNo, @NonNull TextView viewLotNo, @NonNull TextView viewQue,
      @NonNull TextView viewSeparate, @NonNull TextView viewWeight) {
    this.rootView = rootView;
    this.captLot = captLot;
    this.captQue = captQue;
    this.viewBatchNo = viewBatchNo;
    this.viewItemNo = viewItemNo;
    this.viewLotNo = viewLotNo;
    this.viewQue = viewQue;
    this.viewSeparate = viewSeparate;
    this.viewWeight = viewWeight;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomSkipjackQueItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomSkipjackQueItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_skipjack_que_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomSkipjackQueItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.capt_lot;
      TextView captLot = ViewBindings.findChildViewById(rootView, id);
      if (captLot == null) {
        break missingId;
      }

      id = R.id.capt_que;
      TextView captQue = ViewBindings.findChildViewById(rootView, id);
      if (captQue == null) {
        break missingId;
      }

      id = R.id.view_batchNo;
      TextView viewBatchNo = ViewBindings.findChildViewById(rootView, id);
      if (viewBatchNo == null) {
        break missingId;
      }

      id = R.id.view_itemNo;
      TextView viewItemNo = ViewBindings.findChildViewById(rootView, id);
      if (viewItemNo == null) {
        break missingId;
      }

      id = R.id.view_lotNo;
      TextView viewLotNo = ViewBindings.findChildViewById(rootView, id);
      if (viewLotNo == null) {
        break missingId;
      }

      id = R.id.view_que;
      TextView viewQue = ViewBindings.findChildViewById(rootView, id);
      if (viewQue == null) {
        break missingId;
      }

      id = R.id.view_separate;
      TextView viewSeparate = ViewBindings.findChildViewById(rootView, id);
      if (viewSeparate == null) {
        break missingId;
      }

      id = R.id.view_weight;
      TextView viewWeight = ViewBindings.findChildViewById(rootView, id);
      if (viewWeight == null) {
        break missingId;
      }

      return new CustomSkipjackQueItemBinding((ConstraintLayout) rootView, captLot, captQue,
          viewBatchNo, viewItemNo, viewLotNo, viewQue, viewSeparate, viewWeight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
